{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/address-qrcode/address-qrcode.component.html","webpack:///./src/app/components/address-qrcode/address-qrcode.component.scss","webpack:///./src/app/components/address-qrcode/address-qrcode.component.ts","webpack:///./src/app/components/blocks-panel/blocks-panel.component.html","webpack:///./src/app/components/blocks-panel/blocks-panel.component.scss","webpack:///./src/app/components/blocks-panel/blocks-panel.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/transactions-panel/transactions-panel.component.html","webpack:///./src/app/components/transactions-panel/transactions-panel.component.scss","webpack:///./src/app/components/transactions-panel/transactions-panel.component.ts","webpack:///./src/app/pages/address-details/address-details.component.html","webpack:///./src/app/pages/address-details/address-details.component.scss","webpack:///./src/app/pages/address-details/address-details.component.ts","webpack:///./src/app/pages/block-details/block-details.component.html","webpack:///./src/app/pages/block-details/block-details.component.scss","webpack:///./src/app/pages/block-details/block-details.component.ts","webpack:///./src/app/pages/explorer-home/explorer-home.component.html","webpack:///./src/app/pages/explorer-home/explorer-home.component.scss","webpack:///./src/app/pages/explorer-home/explorer-home.component.ts","webpack:///./src/app/pages/transaction-details/transaction-details.component.html","webpack:///./src/app/pages/transaction-details/transaction-details.component.scss","webpack:///./src/app/pages/transaction-details/transaction-details.component.ts","webpack:///./src/app/pipes/hex-to-ascii.pipe.ts","webpack:///./src/app/pipes/unix-timestamp-to-date.pipe.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/app/services/address.service.ts","webpack:///./src/app/services/block.service.ts","webpack:///./src/app/services/transaction.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { ModalModule, PaginationModule } from 'ngx-bootstrap';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\nimport { TypeSafeWeb3 } from 'typesafe-web3';\nimport { AppComponent } from './app.component';\nimport { AddressQrcodeComponent } from './components/address-qrcode/address-qrcode.component';\nimport { BlocksPanelComponent } from './components/blocks-panel/blocks-panel.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { TransactionsPanelComponent } from './components/transactions-panel/transactions-panel.component';\nimport { AddressDetailsComponent } from './pages/address-details/address-details.component';\nimport { BlockDetailsComponent } from './pages/block-details/block-details.component';\nimport { ExplorerHomeComponent } from './pages/explorer-home/explorer-home.component';\nimport { TransactionDetailsComponent } from './pages/transaction-details/transaction-details.component';\nimport { HexToAsciiPipe } from './pipes/hex-to-ascii.pipe';\nimport { UnixTimestampToDatePipe } from './pipes/unix-timestamp-to-date.pipe';\nimport { RoutingModule } from './routing.module';\nimport { AddressService } from './services/address.service';\nimport { BlockService } from './services/block.service';\nimport { TransactionService } from './services/transaction.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // pages\n    ExplorerHomeComponent,\n    AddressDetailsComponent,\n    BlockDetailsComponent,\n    TransactionDetailsComponent,\n    // components\n    BlocksPanelComponent,\n    AddressQrcodeComponent,\n    TransactionsPanelComponent,\n    HeaderComponent,\n    AddressQrcodeComponent,\n    // pipes\n    UnixTimestampToDatePipe,\n    HexToAsciiPipe,\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    RouterModule,\n    PaginationModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    NgxQRCodeModule,\n    HttpClientModule,\n  ],\n  providers: [\n    BlockService,\n    TransactionService,\n    AddressService,\n    {\n      provide: TypeSafeWeb3,\n      useFactory: getTypeSafeWeb3\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\nexport function getTypeSafeWeb3(): TypeSafeWeb3 {\n  return new TypeSafeWeb3('http://localhost:8545');\n}\n","module.exports = \"<button type=\\\"button\\\" class=\\\"btn btn-akroma qr-link\\\" (click)=\\\"openModal(template)\\\">QR</button>\\r\\n \\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <ngx-qrcode [qrc-element-type]=\\\"elementType\\\" [qrc-value]=\\\"hash\\\"></ngx-qrcode>\\r\\n    <code>{{ hash }}</code>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n  .akromaModal > div.modal-content {\\n  border-radius: 0 !important;\\n  background-color: rgba(255, 255, 255, 0.9); }\\n  .qr-link {\\n  font-weight: 700;\\n  color: #fff;\\n  background-color: transparent;\\n  text-decoration: underline; }\\n\"","import { Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-address-qrcode',\r\n  templateUrl: './address-qrcode.component.html',\r\n  styleUrls: ['./address-qrcode.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AddressQrcodeComponent {\r\n  @Input()\r\n  hash!: string;\r\n  elementType: 'url' | 'canvas' | 'img' = 'url';\r\n\r\n  modalRef!: BsModalRef;\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {class: 'akromaModal'});\r\n  }\r\n}\r\n","module.exports = \"<h1>Blocks</h1>\\r\\n<div class=\\\"pt-3\\\" *ngFor=\\\"let block of blocks$ | async; trackBy: trackTransaction\\\">\\r\\n  <div class=\\\"card card-akroma text-white bg-dark\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <span>\\r\\n        <a [routerLink]=\\\"['/', 'block', block.number]\\\">\\r\\n          {{ block.number }}\\r\\n        </a>\\r\\n      </span>\\r\\n      <span class=\\\"float-right\\\">{{ block.timestamp | unixTimestampToDate | date:'yyyy-MM-dd HH:mm:ss' }}</span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <span>{{ block.extraData | hexToAscii }}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { Block } from 'typesafe-web3/dist/lib/model/block';\r\nimport { BlockService } from '../../services/block.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-blocks-panel',\r\n  templateUrl: './blocks-panel.component.html',\r\n  styleUrls: ['./blocks-panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BlocksPanelComponent implements OnInit {\r\n  blocks$!: Observable<Block[]>;\r\n\r\n  constructor(\r\n    private blockService: BlockService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.blocks$ = from(this.blockService.getBlocks());\r\n  }\r\n\r\n  trackBlock(index: number, block: Block) {\r\n    return block ? block.number : undefined;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"background\\\">\\n    <div class=\\\"container h-100\\\">\\n        <div class=\\\"row pt-4\\\">\\n            <div class=\\\"col\\\">\\n                <a href=\\\"/\\\">\\n                    <img src=\\\"../../assets/images/akroma-logo-on-black.svg\\\" alt=\\\"Akroma\\\">\\n                </a>\\n            </div>\\n            <div class=\\\"col text-right\\\">\\n                <form class=\\\"form-inline my-2 my-lg-0 float-right\\\" [formGroup]=\\\"lookupForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n                    <div class=\\\"input-group\\\">\\n                        <input formControlName=\\\"lookup\\\" type=\\\"text\\\" class=\\\"form-control form-control-akroma\\\" placeholder=\\\"Address | Transaction | Block\\\" aria-label=\\\"\\\" aria-describedby=\\\"\\\">\\n                        <div class=\\\"input-group-append\\\">\\n                            <button class=\\\"btn btn-akroma\\\" type=\\\"submit\\\">search</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n  .background {\\n  background-image: url('akroma-bg4.png');\\n  color: #fff;\\n  background-size: cover;\\n  min-height: 150px; }\\n  .input-group {\\n  width: 450px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Utils from 'typesafe-web3/dist/lib/utils';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  lookupForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.lookupForm = this.formBuilder.group({\n      lookup: this.formBuilder.control(''),\n    });\n  }\n  onSubmit() {\n    const lookupValue = this.lookupForm.value.lookup;\n    const lookupType = this.getLookupType(this.lookupForm.value.lookup);\n\n    if (!lookupType) { return; }\n\n    this.router.navigate(['/', lookupType, lookupValue]);\n  }\n\n  private getLookupType(lookupValue: string): string | null {\n    if (this.isAddress(lookupValue)) { return 'address'; }\n    if (this.isTransaction(lookupValue)) { return 'transaction'; }\n    if (this.isBlock(lookupValue)) { return 'block'; }\n\n    return null;\n  }\n\n  private isAddress(lookupValue: string): boolean {\n    return Utils.isAddress(lookupValue);\n  }\n\n  private isTransaction(lookupValue: string): boolean {\n    return /^0x?([A-Fa-f0-9]{64})$/.test(lookupValue);\n  }\n\n  private isBlock(lookupValue: string): boolean {\n    return Number.parseInt(lookupValue, 10).toString(10) === lookupValue;\n  }\n}\n","module.exports = \"<h1>Transactions</h1>\\r\\n<div *ngFor=\\\"let block of blocks$ | async\\\">\\r\\n  <div class=\\\"pt-3\\\" *ngFor=\\\"let transaction of block.transactions\\\">\\r\\n    <div class=\\\"card card-akroma text-white bg-dark\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <span>\\r\\n          <a [routerLink]=\\\"['/', 'transaction', transaction.hash]\\\" class=\\\"transaction-hash-link\\\">\\r\\n            {{ transaction.hash | slice:0:25 }}\\r\\n          </a>\\r\\n\\r\\n        </span>\\r\\n        <span class=\\\"float-right\\\">{{ block.timestamp | unixTimestampToDate | date:'yyyy-MM-dd HH:mm:ss' }}</span>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-2\\\">amount</div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <span class=\\\"float-right\\\">{{ transaction.value }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-2\\\">from</div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <span class=\\\"float-right\\\">\\r\\n              <a [routerLink]=\\\"['/', 'address', transaction.from]\\\" class=\\\"transaction-to-from-link\\\">\\r\\n                {{ transaction.from }}\\r\\n              </a>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-2\\\">to</div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <span class=\\\"float-right\\\">\\r\\n              <a [routerLink]=\\\"['/', 'address', transaction.to]\\\" class=\\\"transaction-to-from-link\\\">\\r\\n                {{ transaction.to }}\\r\\n              </a>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { Block } from 'typesafe-web3/dist/lib/model/block';\r\nimport { Transaction } from 'typesafe-web3/dist/lib/model/transaction';\r\nimport { BlockService } from '../../services/block.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-transactions-panel',\r\n  templateUrl: './transactions-panel.component.html',\r\n  styleUrls: ['./transactions-panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TransactionsPanelComponent implements OnInit {\r\n  transactions$!: Observable<Transaction[]>;\r\n  blocks$!: Observable<Block[]>;\r\n\r\n  constructor(\r\n    private blockService: BlockService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.blocks$ = from(this.blockService.getBlocks());\r\n  }\r\n\r\n  trackTransaction(index: number, transaction: Transaction) {\r\n    return transaction ? transaction.hash : undefined;\r\n  }\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<div class=\\\"page-body\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h1>Address</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <table class=\\\"table table-striped table-dark table-akroma table-responsive-sm\\\">\\r\\n\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>Address</td>\\r\\n              <td>\\r\\n                {{ address }}\\r\\n                <span class=\\\"float-right\\\">\\r\\n                    <app-address-qrcode [hash]=\\\"address\\\"></app-address-qrcode>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Transactions</td>\\r\\n              <td>{{ total }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Balance</td>\\r\\n              <td>{{ (balance$ | async) }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h1>Transactions</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\\"(addressTransactions$ | async)?.length > 0\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <pagination class=\\\"pagination-sm\\\" [totalItems]=\\\"total\\\" [maxSize]=\\\"10\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&nbsp;\\\" nextText=\\\"&nbsp;\\\" [itemsPerPage]=\\\"10\\\" [rotate]=\\\"false\\\" (pageChanged)=\\\"pageAddressTransactions($event)\\\" (numPages)=\\\"numPages = 10\\\"></pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <ng-container *ngIf=\\\"addressTransactions$ | async as trans\\\">\\r\\n          <table class=\\\"table table-striped table-dark table-akroma table-responsive-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th class=\\\"w-25\\\" i18n>Hash</th>\\r\\n                <th i18n>Date</th>\\r\\n                <th i18n>Direction</th>\\r\\n                <th i18n>Address</th>\\r\\n                <th i18n>Amount</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let transaction of trans\\\">\\r\\n                <td>\\r\\n                    <a [routerLink]=\\\"['/', 'transaction', transaction.hash]\\\" class=\\\"transaction-hash-link\\\">\\r\\n                      {{ transaction.hash | slice:0:20 }}...\\r\\n                    </a>\\r\\n                </td>\\r\\n                <td>{{ transaction.ts | unixTimestampToDate | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n                <td>\\r\\n                  <span *ngIf=\\\"isFrom(transaction.from); else fromDirection\\\">\\r\\n                    <span>Sent</span>\\r\\n                  </span>\\r\\n                  <ng-template #fromDirection>\\r\\n                    <span>Received</span>\\r\\n                  </ng-template>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <span *ngIf=\\\"isFrom(transaction.from); else fromAddress\\\">\\r\\n                    <a [routerLink]=\\\"['/', 'address', transaction.to]\\\" class=\\\"transaction-to-from-link\\\">\\r\\n                      {{ transaction.to }}\\r\\n                    </a>\\r\\n                  </span>\\r\\n                  <ng-template #fromAddress>\\r\\n                    <a [routerLink]=\\\"['/', 'address', transaction.from]\\\" class=\\\"transaction-to-from-link\\\">\\r\\n                      {{ transaction.from }}\\r\\n                    </a>\\r\\n                  </ng-template>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <span *ngIf=\\\"isFrom(transaction.from); else toValue\\\">\\r\\n                    <span class=\\\"sent\\\">-{{ transaction.value }} AKA</span>\\r\\n                  </span>\\r\\n                  <ng-template #toValue>\\r\\n                    <span class=\\\"received\\\">+{{ transaction.value }} AKA</span>\\r\\n                  </ng-template>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <ng-container *ngIf=\\\"address$ | async as address\\\">\\r\\n  <div class=\\\"background\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-md-8\\\">\\r\\n          <div class=\\\"address\\\">\\r\\n            {{ address.hash }}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-md-4\\\">\\r\\n          <div class=\\\"qrcode\\\">\\r\\n            <app-address-qrcode [hash]=\\\"address.hash\\\"></app-address-qrcode>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-12 col-md-6\\\">\\r\\n          <div class=\\\"info d-flex align-items-baseline px-2\\\">\\r\\n            {{ address.balance }}\\r\\n          </div>\\r\\n          <div class=\\\"py-1 px-2 text-uppercase type\\\" i18n>\\r\\n            Akroma Balance\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-md-3\\\">\\r\\n          <div class=\\\"info d-flex align-items-baseline px-2\\\">\\r\\n            {{ address.mined }}\\r\\n          </div>\\r\\n          <div class=\\\"py-1 px-2 text-uppercase type\\\" i18n>\\r\\n            Blocks Mined\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-md-3\\\">\\r\\n          <div class=\\\"info d-flex align-items-baseline px-2\\\">\\r\\n            {{ address.transactionsInitiatedCount }}\\r\\n          </div>\\r\\n          <div class=\\\"py-1 px-2 text-uppercase type\\\" i18n>\\r\\n            Transactions\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"container transactions\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"transaction-header\\\" i18n>\\r\\n          Transactions\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\\"addressTransactions$ | async as addressTransactions\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div *ngFor=\\\"let transaction of addressTransactions.transactions\\\">\\r\\n            <div class=\\\"transaction-grid\\\">\\r\\n              <div class=\\\"transaction-icon\\\">\\r\\n                <img *ngIf=\\\"transaction.from.toLowerCase() === address.hash.toLowerCase(); else receivedIcon\\\" src=\\\"assets/images/icon-sent.svg\\\" alt=\\\"Sent\\\">\\r\\n                <ng-template #receivedIcon>\\r\\n                  <img src=\\\"assets/images/icon-received.svg\\\" alt=\\\"Received\\\">\\r\\n                </ng-template>\\r\\n              </div>\\r\\n              <a [routerLink]=\\\"['/explorer', 'transaction', transaction.hash]\\\" class=\\\"transaction-hash-link\\\">\\r\\n                <div class=\\\"transaction-hash\\\">\\r\\n                  <span class=\\\"text-truncate\\\">\\r\\n                    {{ transaction.hash }}\\r\\n                  </span>\\r\\n                </div>\\r\\n              </a>\\r\\n              <ng-template *ngIf=\\\"transaction.from.toLowerCase() === address.hash.toLowerCase(); then sentAction; else receivedAction\\\"></ng-template>\\r\\n              <ng-template #sentAction>\\r\\n                <a [routerLink]=\\\"['/explorer', 'address', transaction.to]\\\" class=\\\"transaction-action-link\\\">\\r\\n                  <div class=\\\"transaction-action\\\">\\r\\n                    <span class=\\\"text-truncate\\\">\\r\\n                      <span class=\\\"bold text-uppercase\\\" i18n>TO</span> {{ transaction.to }}</span>\\r\\n                  </div>\\r\\n                </a>\\r\\n              </ng-template>\\r\\n              <ng-template #receivedAction>\\r\\n                <a [routerLink]=\\\"['/explorer', 'address', transaction.from]\\\" class=\\\"transaction-action-link\\\">\\r\\n                  <div class=\\\"transaction-action\\\">\\r\\n                    <span class=\\\"text-truncate\\\">\\r\\n                      <span class=\\\"bold text-uppercase\\\" i18n>FROM</span> {{ transaction.from }}</span>\\r\\n                  </div>\\r\\n                </a>\\r\\n              </ng-template>\\r\\n              <div class=\\\"transaction-value\\\">\\r\\n                {{ transaction.value | number:'1.0-5' }} AKA\\r\\n              </div>\\r\\n              <div class=\\\"transaction-timestamp\\\">\\r\\n                {{ transaction.timestamp | unixTimestampToDate | date:'yyyy-MM-dd HH:mm:ss' }}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <ng-container *ngIf=\\\"addressTransactions.totalPages > 1\\\">\\r\\n            <pagination class=\\\"pagination-sm\\\" [totalItems]=\\\"addressTransactions.totalTransactions\\\" [maxSize]=\\\"6\\\" [(ngModel)]=\\\"currentPage\\\"\\r\\n              previousText=\\\"&nbsp;\\\" nextText=\\\"&nbsp;\\\" [itemsPerPage]=\\\"20\\\" [rotate]=\\\"false\\\" (pageChanged)=\\\"pageAddressTransactions($event)\\\" (numPages)=\\\"numPages = addressTransactions.totalPages\\\"></pagination>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</ng-container> -->\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n  :host, .page-body {\\n  display: block;\\n  min-height: 70vh; }\\n  .sent {\\n  color: #CF0000; }\\n  .received {\\n  color: green; }\\n\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { Transaction } from 'typesafe-web3/dist/lib/model/transaction';\r\nimport { AddressService } from '../../services/address.service';\r\nimport { TransactionService } from '../../services/transaction.service';\r\n\r\n@Component({\r\n  selector: 'app-address-details',\r\n  templateUrl: './address-details.component.html',\r\n  styleUrls: ['./address-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddressDetailsComponent implements OnInit {\r\n  currentPage = 1;\r\n  transactions!: string[];\r\n  total = 0;\r\n  pages = 1;\r\n  balance$!: Observable<string>;\r\n  addressTransactions$!: Observable<Transaction[]>;\r\n  address = '';\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private transactionService: TransactionService,\r\n    private addressService: AddressService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.address = params.addressHash;\r\n      this.transactionService.getTransactionCountByAddress(params.addressHash)\r\n        .then(result => {\r\n          this.total = result;\r\n          this.pages = result / 10;\r\n        });\r\n      this.balance$ = from(this.addressService.getBalacne(this.address));\r\n      this.pageAddressTransactions({ init: true, page: 1 });\r\n    });\r\n  }\r\n\r\n  pageAddressTransactions(event: any) {\r\n    // guard to prevent excess firing\r\n    if (this.currentPage === event.page && !event.init) {\r\n      return;\r\n    }\r\n    this.addressTransactions$ = from(this.transactionService.getTransactionsAndBlockByAddress(this.address, event.page - 1));\r\n    this.currentPage = event.page;\r\n  }\r\n\r\n  public isFrom(address: string): boolean {\r\n    return this.address.toUpperCase() === address.toUpperCase();\r\n  }\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<div class=\\\"page-body\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h1>Block</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <table class=\\\"table table-striped table-dark table-akroma table-responsive-sm\\\" *ngIf=\\\"block$ | async as block\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>Number</td>\\r\\n              <td>{{ block.number }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Hash</td>\\r\\n              <td>{{ block.hash }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Timestamp</td>\\r\\n              <td>{{ block.timestamp | unixTimestampToDate | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Parent Hash</td>\\r\\n              <td>\\r\\n                <a [routerLink]=\\\"['/', 'block', block.parentHash]\\\">\\r\\n                  {{ block.parentHash }}\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>SHA3 Uncles</td>\\r\\n              <td>{{ block.sha3Uncles }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Miner</td>\\r\\n              <td>{{ block.miner }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Difficulty</td>\\r\\n              <td>{{ block.difficulty }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Total Difficulty</td>\\r\\n              <td>{{ block.totalDifficulty }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Gas Limit</td>\\r\\n              <td>{{ block.gasLimit }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Gas Used</td>\\r\\n              <td>{{ block.gasUsed }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Nonce</td>\\r\\n              <td>{{ block.nonce }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Extra Data</td>\\r\\n              <td>{{ block.extraData | hexToAscii }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n  :host, .page-body {\\n  display: block;\\n  min-height: 70vh; }\\n\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { Block } from 'typesafe-web3/dist/lib/model/block';\r\nimport { BlockService } from '../../services/block.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-block-details',\r\n  templateUrl: './block-details.component.html',\r\n  styleUrls: ['./block-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BlockDetailsComponent implements OnInit {\r\n  block$!: Observable<Block>;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private blockService: BlockService,\r\n  ) {\r\n    console.log('block details!');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.block$ = from(this.blockService.getBlock(params.blockId));\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<div class=\\\"page-body\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <app-blocks-panel></app-blocks-panel>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <app-transactions-panel></app-transactions-panel>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <app-footer></app-footer> -->\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n  :host, .page-body {\\n  display: block;\\n  min-height: 70vh; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\ntype Panel = 'blocks' | 'transactions';\r\n\r\n@Component({\r\n  selector: 'app-explorer-home',\r\n  templateUrl: './explorer-home.component.html',\r\n  styleUrls: ['./explorer-home.component.scss'],\r\n})\r\nexport class ExplorerHomeComponent implements OnInit {\r\n  private activePanel: Panel = 'blocks';\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get isBlocksPanelActive() {\r\n    return this.activePanel === 'blocks';\r\n  }\r\n\r\n  get isTransactionsPanelActive() {\r\n    return this.activePanel === 'transactions';\r\n  }\r\n\r\n  setActivePanel(panel: Panel) {\r\n    if (this.activePanel === panel) { return; }\r\n\r\n    this.activePanel = panel;\r\n  }\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<div class=\\\"page-body\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h1>Transaction</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <table class=\\\"table table-striped table-dark table-akroma table-responsive-sm\\\" *ngIf=\\\"transaction$ | async as transaction\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>Hash</td>\\r\\n              <td>{{ transaction.hash }}</td>\\r\\n            </tr>\\r\\n            <!-- <tr>\\r\\n              <td>Timestamp</td>\\r\\n              <td>{{ block.timestamp | unixTimestampToDate | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n            </tr> -->\\r\\n            <tr>\\r\\n              <td>From</td>\\r\\n              <td>\\r\\n                <a [routerLink]=\\\"['/', 'address', transaction.from]\\\">\\r\\n                  {{ transaction.from }}\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>To</td>\\r\\n              <td>\\r\\n                <a [routerLink]=\\\"['/', 'address', transaction.to]\\\">\\r\\n                  {{ transaction.to }}\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Confirmations</td>\\r\\n              <td>0</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Value</td>\\r\\n              <td>{{ transaction.value }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Block Number</td>\\r\\n              <td>\\r\\n                <a [routerLink]=\\\"['/', 'block', transaction.blockNumber]\\\">\\r\\n                  {{ transaction.blockNumber }}\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Block Hash</td>\\r\\n              <td>\\r\\n                <a [routerLink]=\\\"['/', 'block', transaction.blockHash]\\\">\\r\\n                  {{ transaction.blockHash }}\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Gas Provided</td>\\r\\n              <td>{{ transaction.gas }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Gas Price</td>\\r\\n              <td>{{ transaction.gasPrice }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Nonce</td>\\r\\n              <td>{{ transaction.nonce }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Input Data</td>\\r\\n              <td> {{ transaction.input | hexToAscii }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".card-akroma {\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25);\\n  border-radius: 0 !important; }\\n  .card-akroma a {\\n    color: #FFFFFF;\\n    text-decoration: underline; }\\n  .btn-akroma {\\n  border-radius: 0;\\n  background-color: #343a40 !important;\\n  color: white;\\n  text-transform: uppercase;\\n  box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .btn-akroma.on-form {\\n    background-color: #1A1A1A !important; }\\n  .table-akroma {\\n  box-shadow: -8px 8px 10px rgba(0, 0, 0, 0.25); }\\n  .table-akroma.table-dark tr td:first-child {\\n    text-transform: uppercase; }\\n  .table-akroma.table-dark a,\\n  .table-akroma.table-dark a:visited {\\n    color: #fff;\\n    text-decoration: none; }\\n  .table-akroma.table-dark a:hover,\\n  .table-akroma.table-dark a.active {\\n    text-decoration: underline;\\n    opacity: 0.60; }\\n  .form-control-akroma {\\n  border: 1px solid #fbfbfb;\\n  border-radius: 0; }\\n  :host, .page-body {\\n  display: block;\\n  min-height: 70vh; }\\n\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { Transaction } from 'typesafe-web3/dist/lib/model/transaction';\r\nimport { TransactionService } from '../../services/transaction.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-transaction-details',\r\n  templateUrl: './transaction-details.component.html',\r\n  styleUrls: ['./transaction-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TransactionDetailsComponent implements OnInit {\r\n  transaction$!: Observable<Transaction>;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private transactionService: TransactionService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.transaction$ = from(this.transactionService.getTransaction(params.transactionHash));\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport Utils from 'typesafe-web3/dist/lib/utils';\r\n@Pipe({\r\n  name: 'hexToAscii',\r\n})\r\nexport class HexToAsciiPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return Utils.toAscii(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'unixTimestampToDate',\r\n})\r\nexport class UnixTimestampToDatePipe implements PipeTransform {\r\n  transform(value: number): Date {\r\n    return new Date(value * 1000);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddressDetailsComponent } from './pages/address-details/address-details.component';\r\nimport { BlockDetailsComponent } from './pages/block-details/block-details.component';\r\nimport { ExplorerHomeComponent } from './pages/explorer-home/explorer-home.component';\r\nimport { TransactionDetailsComponent } from './pages/transaction-details/transaction-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ExplorerHomeComponent },\r\n  { path: 'block/:blockId', component: BlockDetailsComponent },\r\n  { path: 'transaction/:transactionHash', component: TransactionDetailsComponent },\r\n  { path: 'address/:addressHash', component: AddressDetailsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { TypeSafeWeb3 } from 'typesafe-web3';\r\nimport Utils from 'typesafe-web3/dist/lib/utils';\r\n@Injectable()\r\nexport class AddressService {\r\n    constructor(public typeSafeWeb3: TypeSafeWeb3) {\r\n    }\r\n\r\n    public async getBalacne(hash: string): Promise<string> {\r\n        console.log('called: getTransaction');\r\n        const result = await this.typeSafeWeb3.getBalance(hash);\r\n        if (result.ok) {\r\n            return Utils.fromWei(result.data!, 'ether').toString();\r\n        }\r\n        return Promise.reject('could not get block');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TypeSafeWeb3 } from 'typesafe-web3';\r\nimport { Block } from 'typesafe-web3/dist/lib/model/block';\r\n@Injectable()\r\nexport class BlockService {\r\n    constructor(public typeSafeWeb3: TypeSafeWeb3) {\r\n    }\r\n\r\n    public async getBlocks(): Promise<Block[]> {\r\n        console.log('called: getBlocks');\r\n        const blocks: Block[] = [];\r\n        const latest = await this.typeSafeWeb3.getBlockByNumber('latest', true);\r\n        if (latest.data !== undefined && latest.data.number !== undefined) {\r\n            blocks.push(latest.data);\r\n            const stop = latest.data.number - 10;\r\n            for (let index = latest.data.number; index > stop; index--) {\r\n                const next = await this.typeSafeWeb3.getBlockByNumber(index, true);\r\n                if (next.data !== undefined) {\r\n                    blocks.push(next.data);\r\n                }\r\n            }\r\n        }\r\n        return blocks;\r\n    }\r\n\r\n    public async getBlock(numberOrHash: string): Promise<Block> {\r\n        console.log('called: getBlock');\r\n        const result = (this.isHash(numberOrHash) === true)\r\n            ? await this.typeSafeWeb3.getBlockByHash(numberOrHash)\r\n            : await this.typeSafeWeb3.getBlockByNumber(parseInt(numberOrHash, 10));\r\n        if (result.ok && result.data !== undefined) {\r\n            return result.data;\r\n        }\r\n        return Promise.reject('could not get block');\r\n    }\r\n\r\n    private isHash(lookupValue: string): boolean {\r\n        return /^0x?([A-Fa-f0-9]{64})$/.test(lookupValue);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TypeSafeWeb3 } from 'typesafe-web3';\r\nimport { Transaction } from 'typesafe-web3/dist/lib/model/transaction';\r\n@Injectable()\r\nexport class TransactionService {\r\n    constructor(public typeSafeWeb3: TypeSafeWeb3) {\r\n    }\r\n\r\n    public async getTransaction(hash: string): Promise<Transaction> {\r\n        console.log('called: getTransaction');\r\n        const result = await this.typeSafeWeb3.getTransactionByHash(hash);\r\n        if (result.ok && result.data !== undefined) {\r\n            return result.data;\r\n        }\r\n        return Promise.reject('could not get block');\r\n    }\r\n\r\n    public async getTransactionCountByAddress(hash: string): Promise<number> {\r\n        console.log('called: getTransactionCountByAddress');\r\n        const result = await this.typeSafeWeb3.getTransactionCountByAddress(hash);\r\n        if (result.ok && result.data !== undefined) {\r\n            return result.data;\r\n        }\r\n        return Promise.reject('could not get block');\r\n    }\r\n\r\n    public async getTransactionsAndBlockByAddress(hash: string, page: number): Promise<Transaction[]> {\r\n        console.log('called: getTransactionsAndBlockByAddress');\r\n        const result = await this.typeSafeWeb3.getTransactionsAndBlockByAddress(hash, page);\r\n        if (result.ok && result.data !== undefined) {\r\n            return result.data;\r\n        }\r\n        return Promise.reject('could not get block');\r\n    }\r\n\r\n    public async getTransactionsByAddress(hash: string): Promise<string[]> {\r\n        console.log('called: getTransactionsByAddress');\r\n        const result = await this.typeSafeWeb3.getTransactionsByAddress(hash);\r\n        if (result.ok && result.data !== undefined) {\r\n            return result.data;\r\n        }\r\n        return Promise.reject('could not get transactions');\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}